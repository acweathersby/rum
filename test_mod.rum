dd => [ 
  rstd: u32,
  make: f32,
  test: u32
] 




rdrs => [rstd:u8, make:u16, test: u32]

rdr => [rstd:u8, make:rdrs, test: u32]

String => [len:u32, data: u32]

// t () => rdr :[rstd = 2, test = 90]


//red (t:f32) => f32 t + 1

test => [e: u32, u: *u8]

E => [e: f64]


entry (i: E, u: ?) => ? {
  j = 0
 if j is > 0 { i.e + u } else { 2 + j }
} 
