IGNORE { c:sp c:nl tk:cmt::comment }

IMPORT type as ty
IMPORT ../common/primitive as prim
IMPORT ./expression as expr
IMPORT ../common/comment as cmt

<> routine_definition > 

  routine_type^routine_type expr::expression^expression

  :ast { t_RawRoutineDefinition, ty: $routine_type, expression  }

+> ty::type > routine_type
<> routine_type 

  > params (":" ty::type)?^return_type

    :ast { t_RawRoutineType, params, return_type  }

<> params 

  > "\(" param_binding(*",") "\)" 

    :ast { t_Params, params: $2 }

<> param_binding 

  > prim::var^var (":" ty::type)?^ty

    :ast { t_RawParamBinding, var, ty, tok }

