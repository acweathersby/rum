IGNORE { c:sp c:nl tk:cmt::comment }

IMPORT type as ty
IMPORT ../common/primitive as prim
IMPORT ./expression as expr
IMPORT ../common/comment as cmt

<> function_definition 

  >  prim::var^name "=>" function_type^function_type expr::expression^expression

    :ast { t_RawFunction, name, ty: $function_type, expression  }


<> function_type 

  > "\(" param_binding(*)^params ")" (":" ty::type)?^return_type

    :ast { t_RawFunctionType, params, return_type  }


+> ty::type > function_type


<> param_binding 
  
  > prim::var^var ":" ty::type^ty

    :ast { t_RawParamBinding, var, ty, tok }

/* 

<> parser function definition

*/