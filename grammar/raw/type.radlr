IMPORT ../common/primitive as prim
IMPORT annotation as anno
IGNORE { c:sp c:nl }

<> type 
  
  > primitive_type

  | named_type

  | pointer_type

  | void_type

  | flag_type

<> void_type > "_" :ast { t_Type_Void }

<> flag_type > "flag" :ast { t_Type_Flag }

<> named_type > prim::var^name :ast { t_Type_Variable, name }

<> pointer_type > ( anno::lifetime | "&" :ast { t_Reference } )^ptr_type ( named_type | primitive_type )^ty :ast { t_Type_Pointer, ptr_type, ty }

<> primitive_type
  > primitive_uint
  | primitive_int
  | "f32"   :ast { t_Type_f32 }
  | "f64"   :ast { t_Type_f64 }
  | "f128"  :ast { t_Type_f128 }
  | "f32v2" :ast { t_Type_f32v2 }
  | "f32v3" :ast { t_Type_f32v3 }
  | "f32v4" :ast { t_Type_f32v4 }
  | "f32v8" :ast { t_Type_f32v8 }
  | "f64v2" :ast { t_Type_f64v2 }
  | "f64v4" :ast { t_Type_f64v4 }


<> primitive_int 
  > "i8"    :ast { t_Type_i8 }
  | "i16"   :ast { t_Type_i16 }
  | "i32"   :ast { t_Type_i32 }
  | "i64"   :ast { t_Type_i64 }

<> primitive_uint 
  > "u8"    :ast { t_Type_u8 }
  | "u16"   :ast { t_Type_u16 }
  | "u32"   :ast { t_Type_u32 }
  | "u64"   :ast { t_Type_u64 }