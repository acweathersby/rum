#core
// Returns the byte size of a type
get_byte_size :: ( a: type ) : u32 
  a.ele_byte_size


#core
get_type :: ( ref: type_ref ) : type 
  type_table@core[ref.type_id]


#core
// Returns the byte size of a type
get_byte_size :: ( a: type_ref ) : u32 
  get_type(a).ele_byte_size


#core
aligned :: (offset: u32, alignment: u32) : u32
  (offset + ( alignment - 1 )) & (4294967295 - (alignment - 1))

#core
max :: (a:u32, b:u32) : u32
  if a > b { a } otherwise { b }

#core
min :: (a:u32, b:u32) : u32
  if a < b { a } otherwise { b }



// END META =============================================

DD :: [ test: u32, rainbow: u32  ]

#test
trivial :: (u:u32) : DD {
  d = [ test = 2.0 , rainbow = 3.0 ]
  d
}